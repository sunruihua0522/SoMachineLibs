<?xml version="1.0" encoding="utf-8"?>
<Library Name="Toolbox, 2.1.0.0 (Schneider Electric)">
  <Node Name="GlobalTextList" TypeGUID="{63784cbb-9ba0-45e6-9d69-babf3f040511}" EmbeddedTypeGUIDs="" IsHidden="true" ObjectGUID="{b5430773-3042-47d6-a6d3-28650a6ce532}" />
  <Node Name="FB_PI" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" The FB_PI function block is a standard PI function block with manual tuning, hold function, and anti reset wind-up.&lt;br&gt;&#xD;&#xA; The PI controller generates a control output based on the process error in the system (Process error = Set  Point - Actual Value). Using the setting of function block parameters, control output can be tuned to reduce the process error.&lt;br&gt;&#xD;&#xA; The proportional and integral value for the process calculated continuously based on the actual value, set point and input parameters. The function block also limits the control output based on limit settings.&lt;br&gt;" ObjectGUID="{5b5ebfaa-7c36-43da-aacd-fa2c55f291d2}">
    <Node Name="A_CheckParameterValidity" TypeGUID="{8ac092e5-3128-4e26-9e7e-11016c6684f2}" EmbeddedTypeGUIDs="{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{aed36766-bf3a-4bf0-8d51-3a4c769e196c}" />
    <Node Name="A_DoInitialisation" TypeGUID="{8ac092e5-3128-4e26-9e7e-11016c6684f2}" EmbeddedTypeGUIDs="{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{b3fac4b5-5e25-4f34-9622-55d29be6803a}" />
    <Node Name="A_CalculPropTerm" TypeGUID="{8ac092e5-3128-4e26-9e7e-11016c6684f2}" EmbeddedTypeGUIDs="{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{5f0e026d-1b10-4523-8f66-bca9c1f3c498}" />
    <Node Name="A_CalculInternalPara" TypeGUID="{8ac092e5-3128-4e26-9e7e-11016c6684f2}" EmbeddedTypeGUIDs="{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{9a8775e4-b5ca-4941-87a7-5d54b624911b}" />
    <Node Name="A_CalculError" TypeGUID="{8ac092e5-3128-4e26-9e7e-11016c6684f2}" EmbeddedTypeGUIDs="{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{29905dde-5040-4db2-8505-804a41a34e54}" />
    <Node Name="A_CheckBumpless" TypeGUID="{8ac092e5-3128-4e26-9e7e-11016c6684f2}" EmbeddedTypeGUIDs="{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{97db771f-277d-4bdb-b843-d96364d9f047}" />
    <Node Name="A_CheckLimit" TypeGUID="{8ac092e5-3128-4e26-9e7e-11016c6684f2}" EmbeddedTypeGUIDs="{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{51b04a47-914f-41ea-9e51-98ebd7690afe}" />
    <Node Name="A_CalculPISum" TypeGUID="{8ac092e5-3128-4e26-9e7e-11016c6684f2}" EmbeddedTypeGUIDs="{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{0b800ab6-0968-48a4-ad6b-8dc045fccfa9}" />
    <Node Name="A_SaveOld" TypeGUID="{8ac092e5-3128-4e26-9e7e-11016c6684f2}" EmbeddedTypeGUIDs="{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{1774fe18-25cb-4041-a39e-bd768b0892f1}" />
    <Node Name="A_SetResetError" TypeGUID="{8ac092e5-3128-4e26-9e7e-11016c6684f2}" EmbeddedTypeGUIDs="{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{805f2356-784d-4e1d-a4c2-776caab79468}" />
    <Node Name="A_CalculIntTerm" TypeGUID="{8ac092e5-3128-4e26-9e7e-11016c6684f2}" EmbeddedTypeGUIDs="{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{5ca71ab5-2cf8-44c3-941e-63db17043a65}" />
    <Node Name="A_CheckNewParameter" TypeGUID="{8ac092e5-3128-4e26-9e7e-11016c6684f2}" EmbeddedTypeGUIDs="{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{4ab6a976-c7a0-49f0-b199-14a149a8ed30}" />
    <Node Name="A_SetFBOutput" TypeGUID="{8ac092e5-3128-4e26-9e7e-11016c6684f2}" EmbeddedTypeGUIDs="{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{866f8a18-6e88-4108-a833-ade511048197}" />
    <Node Name="A_CalculOffset" TypeGUID="{8ac092e5-3128-4e26-9e7e-11016c6684f2}" EmbeddedTypeGUIDs="{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{32b87bef-b41c-4578-8350-af586a3a3d41}" />
  </Node>
  <Node Name="FB_Scaling" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" The FB_Scaling function block is developed to convert an input value to a specified output range linearly and an error is detected in case of an invalid parameter.&lt;br&gt;&#xD;&#xA; This function block scales an input signal to a linear output, relative to a defined maximum and minimum range.&lt;br&gt;" ObjectGUID="{06aa1b68-1893-43d5-83ff-fa3b7a75825d}">
    <Node Name="A_CheckParameterValidity" TypeGUID="{8ac092e5-3128-4e26-9e7e-11016c6684f2}" EmbeddedTypeGUIDs="{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{ae4b4ec8-f98a-4736-a249-15eed1e846a7}" />
    <Node Name="A_DoInitialisation" TypeGUID="{8ac092e5-3128-4e26-9e7e-11016c6684f2}" EmbeddedTypeGUIDs="{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{992d3a77-415f-4bf2-a48a-84af99eb3c43}" />
    <Node Name="A_SetResetError" TypeGUID="{8ac092e5-3128-4e26-9e7e-11016c6684f2}" EmbeddedTypeGUIDs="{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{eef8309d-58e6-448b-85c0-7238940f3d15}" />
    <Node Name="A_CalcScaleOutput" TypeGUID="{8ac092e5-3128-4e26-9e7e-11016c6684f2}" EmbeddedTypeGUIDs="{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{eb406b00-b596-4040-98ee-e5037f65461e}" />
    <Node Name="A_CalcInternalPara" TypeGUID="{8ac092e5-3128-4e26-9e7e-11016c6684f2}" EmbeddedTypeGUIDs="{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{a7b19bc8-0268-47a5-ad32-8b79c3f86065}" />
    <Node Name="A_CheckNewParameter" TypeGUID="{8ac092e5-3128-4e26-9e7e-11016c6684f2}" EmbeddedTypeGUIDs="{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{a22cc4a8-80b9-47f7-85f7-96b89a1b61bc}" />
  </Node>
  <Node Name="FB_PWM" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" The FB_PWM function block is developed to provide a PWM output based on the input parameter.&lt;br&gt;&#xD;&#xA; The PWM output is generated with defined ON time and OFF time as per the input shown in the first timing diagram below.&lt;br&gt;&#xD;&#xA; With reference to the second timing diagram:&#xD;&#xA; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;li&gt;If i_rIput is a positive value, then the PWM output is available in the q_xPstv. The input i_rIput should be in a range of -100 to 100. The ON time of PWM is determined as given below: PWM ON time = (i_rIput x tPwmPeriod) / 100;&lt;/li&gt;&#xD;&#xA; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;li&gt;If i_rIput is a negative value, then the PWM output is available in q_xNgtv;&lt;/li&gt;&#xD;&#xA; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;li&gt;If i_rIput is greater than 100, then it is limited to 100 and if i_rIput is less than –100, then it is limited to –100;&lt;/li&gt;&#xD;&#xA; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;li&gt;If i_xPwmInstUpdt is TRUE, the change in input parameter is updated in the current PWM cycle itself as shown in the timing diagram;&lt;/li&gt;&#xD;&#xA; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;li&gt;If i_xPwmInstUpdt is FALSE, the change in input is updated only during a start of a new PWM cycle.&lt;/li&gt;&lt;br&gt;&#xD;&#xA; The q_xEn is TRUE as long as the input i_xEn is TRUE, regardless of detected error." ObjectGUID="{94ebd051-2104-435f-ae98-0786bdff1b4f}">
    <Node Name="A_PwmOut" TypeGUID="{8ac092e5-3128-4e26-9e7e-11016c6684f2}" EmbeddedTypeGUIDs="{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{a9a3ffa2-6ad9-437c-9b62-a2cd740fe54e}" />
    <Node Name="A_CheckParameterValidity" TypeGUID="{8ac092e5-3128-4e26-9e7e-11016c6684f2}" EmbeddedTypeGUIDs="{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{8dcba93e-d6a0-49b0-bdb4-02add08ecda1}" />
    <Node Name="A_SetResetError" TypeGUID="{8ac092e5-3128-4e26-9e7e-11016c6684f2}" EmbeddedTypeGUIDs="{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{4c9ad6a4-4cfb-4c33-8419-38c0200ca4e4}" />
    <Node Name="A_CalcInternalPara" TypeGUID="{8ac092e5-3128-4e26-9e7e-11016c6684f2}" EmbeddedTypeGUIDs="{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{a3156e66-c60b-4687-9b61-ea9345fb014e}" />
    <Node Name="A_CheckNewParameter" TypeGUID="{8ac092e5-3128-4e26-9e7e-11016c6684f2}" EmbeddedTypeGUIDs="{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{6e56851e-b555-4d4f-a2af-b3fe556a34d4}" />
    <Node Name="A_DoInitialisation" TypeGUID="{8ac092e5-3128-4e26-9e7e-11016c6684f2}" EmbeddedTypeGUIDs="{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{24d2abc8-63ab-4266-a549-d7915c61c30f}" />
  </Node>
  <Node Name="Quantizer" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" The Quantizer function block discretes the input value (–32768 to 32767) for a given interval.&lt;br&gt;&#xD;&#xA; If the input is more than the input range then the detected error output is TRUE and the output displays a zero value.&lt;br&gt;" ObjectGUID="{f3bc0ccc-7d0e-43ee-a86f-501e6838d673}" />
  <Node Name="Filter_MovingAverage" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" The Filter_MovingAverage function block calculates the moving average value for the user defined number of input samples.&lt;br&gt;&lt;br&gt;&#xD;&#xA; When the number of recorded samples are :&#xD;&#xA; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;li&gt;Less than the specified value i_uiSmplCnt, the function block calculates the average value with the available number of inputs and gives the corresponding output;&lt;/li&gt;&#xD;&#xA; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;li&gt;Equal to or greater than the specified value i_uiSmplCnt, the function block calculates the average value with i_uiSmplCnt number of inputs and gives the corresponding output. It operates like the moving average filter;&lt;/li&gt;&#xD;&#xA; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;li&gt;For i_uiSmplCnt = 0, the input value is assigned to output.&lt;/li&gt;&lt;br&gt;&lt;br&gt;" ObjectGUID="{973b1947-74b4-4c9b-84a6-873023bc946e}">
    <Node Name="A_CheckParameterValidity" TypeGUID="{8ac092e5-3128-4e26-9e7e-11016c6684f2}" EmbeddedTypeGUIDs="{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{d8a19efd-f206-4d75-8a2e-692432e7d0b7}" />
    <Node Name="A_DoInitialisation" TypeGUID="{8ac092e5-3128-4e26-9e7e-11016c6684f2}" EmbeddedTypeGUIDs="{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{0cca1934-3db0-4a26-b9e9-49b69456840f}" />
    <Node Name="A_SetResetError" TypeGUID="{8ac092e5-3128-4e26-9e7e-11016c6684f2}" EmbeddedTypeGUIDs="{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{f565c699-6eef-400d-8717-c0ff87f30990}" />
    <Node Name="A_CalcFilterOutput" TypeGUID="{8ac092e5-3128-4e26-9e7e-11016c6684f2}" EmbeddedTypeGUIDs="{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{3881f729-75fb-4be2-b130-26f5cfa289f5}" />
  </Node>
  <Node Name="Filter_Arithmetic" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" The Filter_Arithmetic function block calculates the arithmetic average value for the user defined number of input samples.&lt;br&gt;&#xD;&#xA; Once the function block is enabled, the output calculation begins.&lt;br&gt;&#xD;&#xA; When the number of samples recorded is equal to the specified value i_uiSmplCnt, the function block gives an averaged output and the output valid bit q_xOputVld becomes TRUE.&lt;br&gt;&#xD;&#xA; The function block output holds this value until the function block is disabled or is in the detected error state.&lt;br&gt;" ObjectGUID="{0967657f-a4b3-4e64-bf57-0f0e453b1bc7}">
    <Node Name="A_DoInitialisation" TypeGUID="{8ac092e5-3128-4e26-9e7e-11016c6684f2}" EmbeddedTypeGUIDs="{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{84493f8e-83d7-4bc3-93ca-e228033e780e}" />
    <Node Name="A_CheckParameterValidity" TypeGUID="{8ac092e5-3128-4e26-9e7e-11016c6684f2}" EmbeddedTypeGUIDs="{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{371b8e25-6e27-40a8-a14f-13a9b2fd8843}" />
    <Node Name="A_CalcFilterOutput" TypeGUID="{8ac092e5-3128-4e26-9e7e-11016c6684f2}" EmbeddedTypeGUIDs="{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{b1d20d30-b7c4-48d6-824c-90dcd4d867a5}" />
    <Node Name="A_SetResetError" TypeGUID="{8ac092e5-3128-4e26-9e7e-11016c6684f2}" EmbeddedTypeGUIDs="{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{bb8e1e75-d8a5-4f64-a40e-f0b98dfd7098}" />
  </Node>
  <Node Name="JK_FlipFlop" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" This Function Block implements the truth table for JK Flip-Flop." ObjectGUID="{75bd907f-1107-450c-bb26-d919dcbb9ea5}" />
  <Node Name="Filter_PT1" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" The Filter_PT1 function block provides a PT1 transfer function. The output value increases to 63% of input value within the time period equal to filter time constant. The output value reaches to 95% of input value after the time period equal to 3 * Filter time constant and then reaches gradually to 100% of the input value.&lt;br&gt;&lt;br&gt;&#xD;&#xA; When the period is equal to :&#xD;&#xA; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;li&gt;The filter time constant, the output value increases to 63% of the input value,&lt;/li&gt;&#xD;&#xA; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;li&gt;Three times the filter time constant, the output value increases to 95% of the input value and then gradually reaches to 100% of the input.&lt;/li&gt;&lt;br&gt;" ObjectGUID="{655d4a2f-7481-463c-a630-cd90c8868c9d}">
    <Node Name="A_DoInitialisation" TypeGUID="{8ac092e5-3128-4e26-9e7e-11016c6684f2}" EmbeddedTypeGUIDs="{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{5747ae13-7c6e-4b20-819e-76abf3eb98e0}" />
    <Node Name="A_SetResetError" TypeGUID="{8ac092e5-3128-4e26-9e7e-11016c6684f2}" EmbeddedTypeGUIDs="{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{c09e3829-ff67-434b-8236-bb4ce07fed01}" />
    <Node Name="A_CheckParameterValidity" TypeGUID="{8ac092e5-3128-4e26-9e7e-11016c6684f2}" EmbeddedTypeGUIDs="{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{cafb4640-700b-43ba-abb8-fcd0a499132d}" />
    <Node Name="A_CalcFilterOutput" TypeGUID="{8ac092e5-3128-4e26-9e7e-11016c6684f2}" EmbeddedTypeGUIDs="{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{546be472-5ee0-4a13-8e19-50fd786a04b3}" />
  </Node>
  <Node Name="FB_PI_PID" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" The FB_PI_PID function block provides a cascaded operation of FB_PI, FB_Limiter and FB_PID. This function block consists of a PI, a control limiter, and a PID element.&lt;br&gt;" ObjectGUID="{98e7f509-5366-4e85-afb4-809e71dc0054}">
    <Node Name="A_Error" TypeGUID="{8ac092e5-3128-4e26-9e7e-11016c6684f2}" EmbeddedTypeGUIDs="{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{fe29cb0a-5b3f-433c-8cef-e35e395d5202}" />
    <Node Name="A_Cascaded_PI_PID_Loop" TypeGUID="{8ac092e5-3128-4e26-9e7e-11016c6684f2}" EmbeddedTypeGUIDs="{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{be0077bc-0930-41a1-9ef5-3f60ccc94cea}" />
    <Node Name="A_SetErrorId" TypeGUID="{8ac092e5-3128-4e26-9e7e-11016c6684f2}" EmbeddedTypeGUIDs="{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{211e2bb7-c2a8-480e-9581-b30af8b33e3f}" />
    <Node Name="A_FormParameter" TypeGUID="{8ac092e5-3128-4e26-9e7e-11016c6684f2}" EmbeddedTypeGUIDs="{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{7be0d7b1-4288-41b7-a24c-4954747a2523}" />
  </Node>
  <Node Name="stPwmPara" TypeGUID="{2db5746d-d284-4425-9f7f-2663a34b0ebc}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" Comment=" Structure for FB_PWM Function Block Inner Loop " ObjectGUID="{8c1cebd4-4418-4424-abaf-987045420ab6}" />
  <Node Name="FB_Cyclic_Monitoring" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" The FB_Cyclic_Monitoring function block monitors an input signal for a maximum value (percentage of the absolute maximum value), over a pre-defined number of controller cycles before an inoperable over-limit is detected.&lt;br&gt;&#xD;&#xA; This function block is used to monitor a real input signal and to transfer the input signal to the output only if the input is within limits. It causes the input value to remain above a predefined limiting value for more than a predefined number of consecutive cycles.&lt;br&gt;" ObjectGUID="{6d0cd7e9-7502-4acb-a8c3-8dc77ec77e12}" />
  <Node Name="Period_TO_Frequency" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" The Period_TO_Frequency function converts time of type TIME to frequency(Hertz).This result is a REAL number.&lt;br&gt;&#xD;&#xA; This function calculates the frequency of given period of time. Time is set in i_rIput pin in TIME data format. The equivalent frequency value is returned in Period_TO_Frequency pin in REAL data format.&lt;br&gt;&#xD;&#xA; Frequency = 1 / Period&lt;br&gt;&#xD;&#xA; &lt;b&gt;NOTE :&lt;/b&gt; If the input is not in the previous range, the output will be zero.&lt;br&gt;" ObjectGUID="{383f973e-6a8f-44a9-bb25-4080b27183a5}" />
  <Node Name="Par_HM" TypeGUID="{2db5746d-d284-4425-9f7f-2663a34b0ebc}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" Comment=" Structure for Hour Meter Function Block " ObjectGUID="{fb2e3289-c925-4750-9528-4dfe25ef528c}" />
  <Node Name="Project information" TypeGUID="{085afe48-c5d8-4ea5-ab0d-b35701fa6009}" EmbeddedTypeGUIDs="" ProvidesLanguageModel="false" ObjectGUID="{11c0fc3a-9bcf-4dd8-ac38-efb93363e521}" />
  <Node Name="Normalizer_With_Limiter" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" The Normalizer_With_Limiter function block scales the minimum and maximum input value to the range of minimum and maximum output value. The input value can be limited to minimum and maximum output values.&lt;br&gt;&#xD;&#xA; The output value can be limited to minimum and maximum output values using i_xIputMinLim and i_xIputMaxLim.&lt;br&gt;&#xD;&#xA; When the input exceeds the maximum/minimum input limit value q_xIputLimExcd will be TRUE.&lt;br&gt;" ObjectGUID="{6f476366-5741-4386-81e6-ff6b743143ec}" />
  <Node Name="Bistable_Valve" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" The Bistable_Valve function block is used for controlling the bistable valve." ObjectGUID="{c327be91-c16f-4909-8e29-cd487897dacd}">
    <Node Name="Commands_Open" TypeGUID="{8ac092e5-3128-4e26-9e7e-11016c6684f2}" EmbeddedTypeGUIDs="{25e509de-33d4-4447-93f8-c9e4ea381c8b}" ObjectGUID="{70fb7728-e05d-4ce7-b7f2-08736a846da8}" />
    <Node Name="Status" TypeGUID="{8ac092e5-3128-4e26-9e7e-11016c6684f2}" EmbeddedTypeGUIDs="{25e509de-33d4-4447-93f8-c9e4ea381c8b}" ObjectGUID="{d9f8b33c-dda7-418e-88e7-28c2ddaa2a33}" />
    <Node Name="Commands_Close" TypeGUID="{8ac092e5-3128-4e26-9e7e-11016c6684f2}" EmbeddedTypeGUIDs="{25e509de-33d4-4447-93f8-c9e4ea381c8b}" ObjectGUID="{3b8d4e5e-64f8-443f-a0b2-4dd141e85df6}" />
    <Node Name="Errors" TypeGUID="{8ac092e5-3128-4e26-9e7e-11016c6684f2}" EmbeddedTypeGUIDs="{25e509de-33d4-4447-93f8-c9e4ea381c8b}" ObjectGUID="{eb145bcf-cac1-4c4b-aefc-2bab5bd3ee91}" />
    <Node Name="Mode" TypeGUID="{8ac092e5-3128-4e26-9e7e-11016c6684f2}" EmbeddedTypeGUIDs="{25e509de-33d4-4447-93f8-c9e4ea381c8b}" ObjectGUID="{e00cdcc0-71a6-4a0e-8c6f-81de573b5690}" />
  </Node>
  <Node Name="Equipment Control" TypeGUID="{738bea1e-99bb-4f04-90bb-a7a567e74e3a}" EmbeddedTypeGUIDs="" ProvidesLanguageModel="false" ObjectGUID="{4635214d-7ab9-479a-9d1e-79ca6e7858d0}" />
  <Node Name="Proportional_Valve" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" The Proportional_Valve function block is used for controlling proportional valve." ObjectGUID="{59cbb59a-444e-48f8-adc4-30a85ef83d82}">
    <Node Name="Status" TypeGUID="{8ac092e5-3128-4e26-9e7e-11016c6684f2}" EmbeddedTypeGUIDs="{25e509de-33d4-4447-93f8-c9e4ea381c8b}" ObjectGUID="{45faff19-3d36-445b-bcbc-1472244f2773}" />
    <Node Name="Commands_Move" TypeGUID="{8ac092e5-3128-4e26-9e7e-11016c6684f2}" EmbeddedTypeGUIDs="{25e509de-33d4-4447-93f8-c9e4ea381c8b}" ObjectGUID="{05a92d1b-ec33-4c9b-945d-9e52f75de966}" />
    <Node Name="Handling_Words" TypeGUID="{8ac092e5-3128-4e26-9e7e-11016c6684f2}" EmbeddedTypeGUIDs="{25e509de-33d4-4447-93f8-c9e4ea381c8b}" ObjectGUID="{2b7ccec1-d830-4a61-80de-d4377c722a83}" />
    <Node Name="Errors" TypeGUID="{8ac092e5-3128-4e26-9e7e-11016c6684f2}" EmbeddedTypeGUIDs="{25e509de-33d4-4447-93f8-c9e4ea381c8b}" ObjectGUID="{43ea6642-b024-42bf-a083-933e88c88f4b}" />
    <Node Name="Mode" TypeGUID="{8ac092e5-3128-4e26-9e7e-11016c6684f2}" EmbeddedTypeGUIDs="{25e509de-33d4-4447-93f8-c9e4ea381c8b}" ObjectGUID="{8b6166de-b13b-4176-a1e9-19336f8cc65c}" />
  </Node>
  <Node Name="BitFunctions" TypeGUID="{738bea1e-99bb-4f04-90bb-a7a567e74e3a}" EmbeddedTypeGUIDs="" ProvidesLanguageModel="false" ObjectGUID="{b8537698-64a3-4636-880e-d6d4005be52f}" />
  <Node Name="Filtering Function" TypeGUID="{738bea1e-99bb-4f04-90bb-a7a567e74e3a}" EmbeddedTypeGUIDs="" ProvidesLanguageModel="false" ObjectGUID="{bc4b9b25-3ff4-4f73-a776-bb5244225213}" />
  <Node Name="Physical Conversions" TypeGUID="{738bea1e-99bb-4f04-90bb-a7a567e74e3a}" EmbeddedTypeGUIDs="" ProvidesLanguageModel="false" ObjectGUID="{eb2fc702-9f57-4aef-a86d-e2754a5dac3f}" />
  <Node Name="Numerical Conversions" TypeGUID="{738bea1e-99bb-4f04-90bb-a7a567e74e3a}" EmbeddedTypeGUIDs="" ProvidesLanguageModel="false" ObjectGUID="{b7e419e6-4e5c-4d69-99d0-d8f4f515a6a8}" />
  <Node Name="Visualization" TypeGUID="{738bea1e-99bb-4f04-90bb-a7a567e74e3a}" EmbeddedTypeGUIDs="" ProvidesLanguageModel="false" ObjectGUID="{615eea03-1036-46d7-8b91-38390427e50c}" />
  <Node Name="ONE_SEC_PULSE" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" The ONE_SEC_PULSE function block generates pulses of one second duration at the output q_xOput.&lt;br&gt;" ObjectGUID="{9e316d00-e317-4bfa-bce8-70848e6df05d}" />
  <Node Name="RS_FlipFlop" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" The RS_FlipFlop function block implements the truth table for RS flip-flop with reset priority." ObjectGUID="{677a68be-45e5-4864-9c13-10251400df6d}" />
  <Node Name="st3PointsPara" TypeGUID="{2db5746d-d284-4425-9f7f-2663a34b0ebc}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" Comment=" Structure for FB_3points Function Block " ObjectGUID="{bfec9ee2-0e15-49f1-ac51-471bcb9e1bf2}" />
  <Node Name="Valve Control" TypeGUID="{738bea1e-99bb-4f04-90bb-a7a567e74e3a}" EmbeddedTypeGUIDs="" ProvidesLanguageModel="false" ObjectGUID="{0fa380c6-5ea6-40e9-9966-1f64c0686b46}" />
  <Node Name="stPid" TypeGUID="{2db5746d-d284-4425-9f7f-2663a34b0ebc}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" Comment=" Structure for FB_PID Function Block " ObjectGUID="{8cd7fdca-df92-4244-8666-caec2b2c8c66}" />
  <Node Name="HMI_HM" TypeGUID="{2db5746d-d284-4425-9f7f-2663a34b0ebc}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" Comment=" Structure for Hour Meter Function Block " ObjectGUID="{71dc71a1-b8c6-484b-a08e-6edce6ed1080}" />
  <Node Name="Signal_Saturation" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" The Signal_Saturation function block limits the input signal to upper and lower saturation limit.&lt;br&gt;&#xD;&#xA; When low input value is more than the high value then the detected error output is TRUE and the output displays zero.&lt;br&gt;&#xD;&#xA; When the input exceeds the low/high input limit value, then q_xIputLimExcd is TRUE.&lt;br&gt;" ObjectGUID="{197e50f6-060a-462a-b58b-b48f26be1867}" />
  <Node Name="FB_Redundant_Sensor_Monitoring" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" The FB_Redundant_Sensor_Monitoring function block monitors signals coming in from two redundant analog signal sources or field sensors which have the same range and characteristics.&lt;br&gt;&lt;br&gt;&#xD;&#xA; The function block does the following functions :&#xD;&#xA; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;li&gt;Manipulates the output as per sensor(s) readings (average value);&lt;/li&gt;&#xD;&#xA; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;li&gt;Monitors if the 2 sensor readings are within the specified difference limit, otherwise takes corrective action;&lt;/li&gt;&#xD;&#xA; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;li&gt;Performs predefined action in case of any inoperable sensor is reported;&lt;/li&gt;&#xD;&#xA; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;li&gt;Automatic selection of healthy sensor for output in case of other inoperable sensor;&lt;/li&gt;&#xD;&#xA; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;li&gt;Provision to select any sensor manually;&lt;/li&gt;&#xD;&#xA; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;li&gt;A second-degree polynomial based 'smooth-transition algorithm' eliminates any sudden step variation in the output of the block;&lt;/li&gt;&#xD;&#xA; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;li&gt;The output for a detected difference between the two sensors is set to TRUE when the difference between the two sensor values is not within the limits. The difference between sensor input values is reset immediately after the difference between the sensor inputs are within the limits.&lt;/li&gt;&lt;br&gt;" ObjectGUID="{b9c30085-795e-4fe1-9b05-e345a2928c9d}" />
  <Node Name="stPtPara" TypeGUID="{2db5746d-d284-4425-9f7f-2663a34b0ebc}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" Comment=" Structure for FB_2points Function Block Inner Loop " ObjectGUID="{fc6a63eb-7c4d-44fe-809c-70bb4b0be932}" />
  <Node Name="Toggle_FlipFlop" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" The Toggle_FlipFlop function block implements the truth table for T(Toggle) flip-flop with set priority." ObjectGUID="{5aa62fcd-f320-4947-aebd-c4c4c453d644}" />
  <Node Name="Utilities" TypeGUID="{738bea1e-99bb-4f04-90bb-a7a567e74e3a}" EmbeddedTypeGUIDs="" ProvidesLanguageModel="false" ObjectGUID="{083d49b2-93e5-4268-b811-4254ab591e86}" />
  <Node Name="FB_DeadBand" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" The FB_DeadBand function block is a Deadband function block which allows the input to pass on to the output only if the input is greater than the Deadband limit.&lt;br&gt;&#xD;&#xA; This function block suppresses small amplitude oscillations that are caused by noise, quantization or parameter calculation. It suppresses an input signal if it is within the threshold as shown in transfer function figure below.&lt;br&gt;&lt;br&gt;&#xD;&#xA; With reference to the timing diagram :&#xD;&#xA; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;li&gt;If the i_rIput is lower than the defined threshold range, q_rOput is set to zero and q_xSigUndThsh is TRUE;&lt;/li&gt;&#xD;&#xA; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;li&gt;If the input value (i_rIput) greater or equal to the threshold range, q_rOput is equal to the i_rIput value.&lt;/li&gt;&#xD;&#xA; The q_xEn is TRUE as long as i_xEn is TRUE regardless of the detected error.&lt;br&gt;" ObjectGUID="{6526bdc1-f126-41b7-bc63-f922b427d007}">
    <Node Name="A_Deadband" TypeGUID="{8ac092e5-3128-4e26-9e7e-11016c6684f2}" EmbeddedTypeGUIDs="{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{17eed7a2-3337-43a3-a298-3d25ccd9ecf5}" />
    <Node Name="A_SetResetError" TypeGUID="{8ac092e5-3128-4e26-9e7e-11016c6684f2}" EmbeddedTypeGUIDs="{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{5092d522-8511-41eb-ad03-95293b078b72}" />
    <Node Name="A_CheckParameterValidity" TypeGUID="{8ac092e5-3128-4e26-9e7e-11016c6684f2}" EmbeddedTypeGUIDs="{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{30332bfb-d6f1-451a-a181-ea6b74a025c0}" />
    <Node Name="A_DoInitialisation" TypeGUID="{8ac092e5-3128-4e26-9e7e-11016c6684f2}" EmbeddedTypeGUIDs="{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{3ff37bd6-0788-4d15-add5-89d58ca26bbf}" />
  </Node>
  <Node Name="SetBitTo" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" The SetBitTo function sets/resets (according to set) one bit specified by the bit in the given DWORD input. The bits are counted from low to high starting with 0.&lt;br&gt;&#xD;&#xA; The valid range is 0 to 31." ObjectGUID="{c523b5e1-046d-4d3f-a720-488b8c9deccd}" />
  <Node Name="TestBit" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" The TestBit function tests one bit specified by the bit in the given DWORD input. The bits are counted from low to high starting with 0.&lt;br&gt;&#xD;&#xA; The output shows the status of presence of bit in that specified position. The valid range is 0 to 31.&lt;br&gt;" ObjectGUID="{5bd9d69c-dc94-454f-a02a-8ad2b3e53f53}" />
  <Node Name="GlobalImagePool" TypeGUID="{795b536d-9cec-4fc3-a972-50e1e08d20e8}" EmbeddedTypeGUIDs="" IsHidden="true" ObjectGUID="{fc78c95f-a5ae-4a77-aecd-c933e8f27592}" />
  <Node Name="Visu_PID" TypeGUID="{f18bec89-9fef-401d-9953-2f11739a6808}" EmbeddedTypeGUIDs="" ObjectGUID="{c07933b9-e194-4a0c-9b3a-8cf65abf8ae5}" />
  <Node Name="FB_3points" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" The FB_3points function block provides a 3 points transfer element in the functional diagram.&lt;br&gt;" ObjectGUID="{b84f58f1-1d4d-4ab6-94ee-238e50fdb375}">
    <Node Name="A_Finalize" TypeGUID="{8ac092e5-3128-4e26-9e7e-11016c6684f2}" EmbeddedTypeGUIDs="{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{316c172e-c57e-4fed-9953-15711d4e1be4}" />
    <Node Name="A_Error" TypeGUID="{8ac092e5-3128-4e26-9e7e-11016c6684f2}" EmbeddedTypeGUIDs="{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{a80d7416-033f-4295-80d6-0017fe86c9fb}" />
    <Node Name="A_ManualOperation" TypeGUID="{8ac092e5-3128-4e26-9e7e-11016c6684f2}" EmbeddedTypeGUIDs="{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{dd1496b6-fd9d-42ff-8835-28d04d84368d}" />
    <Node Name="A_AutoOperation" TypeGUID="{8ac092e5-3128-4e26-9e7e-11016c6684f2}" EmbeddedTypeGUIDs="{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{618495e8-b9c7-4813-95d1-aeac0e7d404c}" />
    <Node Name="A_DoInitialization" TypeGUID="{8ac092e5-3128-4e26-9e7e-11016c6684f2}" EmbeddedTypeGUIDs="{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{d3f5ce0b-be37-44e3-9705-ef172ca9fa66}" />
    <Node Name="A_ResetError" TypeGUID="{8ac092e5-3128-4e26-9e7e-11016c6684f2}" EmbeddedTypeGUIDs="{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{af70c9c6-239f-4157-9a94-0560a3772309}" />
    <Node Name="A_CheckParameterValidity" TypeGUID="{8ac092e5-3128-4e26-9e7e-11016c6684f2}" EmbeddedTypeGUIDs="{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{ad10a216-c666-46d9-ae3b-c68a1c3785da}" />
  </Node>
  <Node Name="Library Manager" TypeGUID="{adb5cb65-8e1d-4a00-b70a-375ea27582f3}" EmbeddedTypeGUIDs="" ObjectGUID="{df5b6081-76f9-47f8-b6fa-fe5495152728}" />
  <Node Name="HMI_Valpro" TypeGUID="{2db5746d-d284-4425-9f7f-2663a34b0ebc}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" Comment=" Structure for Proportional Valve Function Block " ObjectGUID="{ab3b71c8-7a44-4ed7-95ce-b830b170aae8}" />
  <Node Name="Hour_Meter" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" The Hour Meter function block is used for accumulating the operating hours of various devices." ObjectGUID="{c3a6f3aa-a4bf-44b2-b9e2-6268c19baa84}">
    <Node Name="Accumulate" TypeGUID="{8ac092e5-3128-4e26-9e7e-11016c6684f2}" EmbeddedTypeGUIDs="{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{85f0343c-3ed6-45d9-929d-de4c69b61e68}" />
    <Node Name="Errors" TypeGUID="{8ac092e5-3128-4e26-9e7e-11016c6684f2}" EmbeddedTypeGUIDs="{25e509de-33d4-4447-93f8-c9e4ea381c8b}" ObjectGUID="{190288e2-6ada-4d37-949e-089b4e95694f}" />
    <Node Name="Status" TypeGUID="{8ac092e5-3128-4e26-9e7e-11016c6684f2}" EmbeddedTypeGUIDs="{25e509de-33d4-4447-93f8-c9e4ea381c8b}" ObjectGUID="{86bcf2ba-eda9-4721-9386-9ae76647c51c}" />
    <Node Name="SelectType" TypeGUID="{8ac092e5-3128-4e26-9e7e-11016c6684f2}" EmbeddedTypeGUIDs="{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{6c35bd7b-a18c-4288-8daa-8689e37d3f23}" />
    <Node Name="Mode" TypeGUID="{8ac092e5-3128-4e26-9e7e-11016c6684f2}" EmbeddedTypeGUIDs="{25e509de-33d4-4447-93f8-c9e4ea381c8b}" ObjectGUID="{3ee6400b-3fe2-4bba-817f-b88eb6196b90}" />
  </Node>
  <Node Name="DWORD_AS_WORD" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" The DWORD_AS_WORD function block converts an input value of data type DWORD to lower and higher outputs of type WORD.&lt;br&gt;&#xD;&#xA; The input double word i_dwIput is split into two words, higher q_wHigh and lower q_wLow words.&lt;br&gt;" ObjectGUID="{577d898f-f7f8-450a-947a-ee89dfe16c20}" />
  <Node Name="ArrayOfByte_TO_String" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" The output String [255] is the set of string characters which corresponds to the ASCII value of input array given in Byte format.&lt;br&gt;&#xD;&#xA; If Order input is TRUE, then the order of characters in the output string corresponds to the order of bytes at the input array. This means there is a 1:1 correspondence between order of input bytes and order of string characters returned at output as explained in example 1.&lt;br&gt;&#xD;&#xA; If the Order input is FALSE, then the order of characters in the output string will be such that, the string character corresponding to ASCII value at input[1] is displayed in output position[2] of output[1..255]. The string character corresponding to ASCII value at input[2] will be displayed in output position[1] of output[1..255].&lt;br&gt;&#xD;&#xA; Similarly the string character corresponding to ASCII value at input[3] will be displayed in output position[4] of output[1..255]. The string character corresponding to ASCII value at input[4] will be displayed in output position[3] of output[1..255] as explained in example 2.&lt;br&gt;&#xD;&#xA; Only if Order input is FALSE and Space input is TRUE and the number of input bytes at the input is odd, then a space character will be added prior to the last string character of the output string as shown in example 3 and 4.&lt;br&gt;&#xD;&#xA; But if the Order input is TRUE, then the Space input has no impact on the output as shown in example 6.&lt;br&gt;" ObjectGUID="{b8195d19-8331-4472-8084-e65f57576cc8}" />
  <Node Name="Frequency_TO_Period" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" The Frequency_TO_Period function converts frequency (Hertz) value of type REAL to time. This result is of TIME type.&lt;br&gt;&#xD;&#xA; The period of time is calculated with the given frequency. The frequency is set in i_rIput pin in REAL data format. The equivalent time value is returned in Frequency_TO_Period pin in TIME data format.&lt;br&gt;&#xD;&#xA; Period = 1 / Frequency&lt;br&gt;&#xD;&#xA; &lt;b&gt;NOTE :&lt;/b&gt; If the input is not in the previous range, the output is zero.&lt;br&gt; " ObjectGUID="{73cf6157-f7d5-4c02-aa6c-a814f73c51a2}" />
  <Node Name="Closed loop control" TypeGUID="{738bea1e-99bb-4f04-90bb-a7a567e74e3a}" EmbeddedTypeGUIDs="" ProvidesLanguageModel="false" ObjectGUID="{cb26e551-cc01-4386-8d9d-68f965411930}" />
  <Node Name="FB_Sensor_Monitoring" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" The FB_Sensor_Monitoring function block monitors and/or scales and/or Deadband filters an input analog signal.&lt;br&gt;&lt;br&gt;&#xD;&#xA; This function block performs the following operations on an analog input signal :&#xD;&#xA; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;li&gt;Monitor if the sensor reading is within the operator specified range, otherwise an error output is detected if not within the range;&lt;/li&gt;&#xD;&#xA; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;li&gt;Monitor I/O hardware and generate an alarm if an error is detected;&lt;/li&gt;&#xD;&#xA; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;li&gt;Provision to enable/disable the I/O hardware monitoring feature in the block;&lt;/li&gt;&#xD;&#xA; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;li&gt;Scale the input value to the desired output range;&lt;/li&gt;&#xD;&#xA; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;li&gt;Pass the final output through a dead-band filter. Deadband suppresses the relative oscillation based on the previous input and present input, and then generates an output.&lt;/li&gt;&lt;br&gt;" ObjectGUID="{4ab706bd-44f2-4e76-879b-6a0d2f4c942d}" />
  <Node Name="stPiPara" TypeGUID="{2db5746d-d284-4425-9f7f-2663a34b0ebc}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" Comment=" Structure for FB_PI Function Block " ObjectGUID="{99fac417-14c3-4427-b905-ad405de3bb43}" />
  <Node Name="FB_2points" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" The FB_2points function block provides a 2 points transfer function based on hysteresis input.&lt;br&gt;" ObjectGUID="{3d61d26f-2201-4ffb-b355-4731a4607667}">
    <Node Name="A_SetResetError" TypeGUID="{8ac092e5-3128-4e26-9e7e-11016c6684f2}" EmbeddedTypeGUIDs="{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{6bf87c82-d59f-4488-90b8-e7f5476ebc4b}" />
    <Node Name="A_CheckNewParameter" TypeGUID="{8ac092e5-3128-4e26-9e7e-11016c6684f2}" EmbeddedTypeGUIDs="{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{800f0efd-5e68-4c05-93cb-06ee88ea7d68}" />
    <Node Name="A_CalcInternalPara" TypeGUID="{8ac092e5-3128-4e26-9e7e-11016c6684f2}" EmbeddedTypeGUIDs="{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{65ce4727-b6fc-45b3-bfd6-778809de30cd}" />
    <Node Name="A_2Point" TypeGUID="{8ac092e5-3128-4e26-9e7e-11016c6684f2}" EmbeddedTypeGUIDs="{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{a4b2618c-d613-4ec9-af0f-b5caaa2a73cb}" />
    <Node Name="A_CheckParameterValidity" TypeGUID="{8ac092e5-3128-4e26-9e7e-11016c6684f2}" EmbeddedTypeGUIDs="{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{19214af3-993b-4ee8-9679-99e07ec7b7d3}" />
    <Node Name="A_DoInitialisation" TypeGUID="{8ac092e5-3128-4e26-9e7e-11016c6684f2}" EmbeddedTypeGUIDs="{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{c40bd57e-049d-464f-bc4e-d34b182e55fb}" />
  </Node>
  <Node Name="Frequency_Multiplier" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" The Frequency_Multiplier function block implements 32 blinkers represented by the bits of output.&lt;br&gt;&#xD;&#xA; On every rising edge of enable signal, the blinker output starts with zero. The lowest bit changes its state after a time base period. The second bit blinks with half the frequency of the initial one. The third bit blinks with half the frequency of the second one and so on, until enable signal is reset. If i_xHold input is set, then current state of blinkers is Hold. If blinkers of type BOOL are required the function block DWORD_AS_BIT (Util Library) can be used.&lt;br&gt;&#xD;&#xA; The output is reset on the rising edge of Enable input.&lt;br&gt;" ObjectGUID="{c4093a4c-bb70-4125-9429-11d7167be035}" />
  <Node Name="Par_Val_Bi" TypeGUID="{2db5746d-d284-4425-9f7f-2663a34b0ebc}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" Comment=" Structure for Bistable Valve Function Block " ObjectGUID="{dcd85ae5-ffe7-4340-b783-a18448783569}" />
  <Node Name="Signal_Statistics" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" This function block calculates the maximum, minimum, average and variance of a series of input values.&lt;br&gt;&#xD;&#xA; This function block considers the input value in each controller scan cycle as a Sample.&lt;br&gt;" ObjectGUID="{2048e403-1aef-4e53-8dcf-d38c910537cb}" />
  <Node Name="Frequency_Output" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" The Frequency_Output function block implements frequencies.&lt;br&gt;&#xD;&#xA; A positive signal at i_xEn activates the block. The output signal starts with TRUE and holds this signal for a duration of (TimeBase * i_rIput) and then it changes to FALSE for a duration of TimeBase * (1-i_rIput).&lt;br&gt;&#xD;&#xA; If the input signal enters the edge range 0 to i_rEdge, the output signal no longer alternates and is continually FALSE. If it enters the range 1-i_rEdge to1 then the output signal is continuously TRUE.&lt;br&gt;&#xD;&#xA; If the signal at i_xEn is removed, the output signal remains at its current value until the function block is restarted through a positive signal at i_xEn.&lt;br&gt;" ObjectGUID="{6bde284b-5d9f-4024-81a2-78cac98b3d62}" />
  <Node Name="FlipFlops" TypeGUID="{738bea1e-99bb-4f04-90bb-a7a567e74e3a}" EmbeddedTypeGUIDs="" ProvidesLanguageModel="false" ObjectGUID="{30c76ae2-52b8-458f-bc1f-7bffc9ba6ef1}" />
  <Node Name="stPIPIDOutLoop" TypeGUID="{2db5746d-d284-4425-9f7f-2663a34b0ebc}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" Comment=" Structure for FB_PI_PID Function Block Outer Loop " ObjectGUID="{f45e5870-219f-4a30-9de3-22524eac74e1}" />
  <Node Name="stPIPIDInLoop" TypeGUID="{2db5746d-d284-4425-9f7f-2663a34b0ebc}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" Comment=" Structure for FB_PI_PID Function Block Inner Loop " ObjectGUID="{bb0f288f-3e7c-49dd-b759-e1cc08534b3c}" />
  <Node Name="Check_Divisor" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" The Check_Divisor function block checks for zero division condition.&lt;br&gt;&#xD;&#xA; If the divisor i_rDvsr is zero, then the output q_rChkDiv is 1, else if divisor not equal to 0, then output is equal to divisor.&lt;br&gt;" ObjectGUID="{065316b7-ee94-4d52-94ff-eb1145135c9f}" />
  <Node Name="FB_3points_Ext" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" The FB_3points_Ext function block provides a 3-point transfer element in the functional diagram.&lt;br&gt;&#xD;&#xA; This function block is an extension for FB_3points function block. It produces a control output q_rOput in the form of 3-point hysteresis loop. The output depends upon the process error and the gain and offset value that are given by the user.&lt;br&gt;" ObjectGUID="{d951eb5d-1090-4292-bc76-117de73a864f}">
    <Node Name="A_DoInitialization" TypeGUID="{8ac092e5-3128-4e26-9e7e-11016c6684f2}" EmbeddedTypeGUIDs="{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{137af555-062c-4a19-a8e9-85c37e1552b8}" />
    <Node Name="A_Finalize" TypeGUID="{8ac092e5-3128-4e26-9e7e-11016c6684f2}" EmbeddedTypeGUIDs="{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{039155d8-9197-4f50-8d22-f5253fb967f2}" />
    <Node Name="A_Error" TypeGUID="{8ac092e5-3128-4e26-9e7e-11016c6684f2}" EmbeddedTypeGUIDs="{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{07244711-8175-4b5a-9916-7020456c2ee7}" />
    <Node Name="A_ManualOperation" TypeGUID="{8ac092e5-3128-4e26-9e7e-11016c6684f2}" EmbeddedTypeGUIDs="{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{66a9f0a7-fe0e-4f16-94c3-6c7cb04e2873}" />
    <Node Name="A_ResetError" TypeGUID="{8ac092e5-3128-4e26-9e7e-11016c6684f2}" EmbeddedTypeGUIDs="{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{f45a9d0e-17cc-4567-bd82-4a75491bd7a6}" />
    <Node Name="A_CheckParameterValidity" TypeGUID="{8ac092e5-3128-4e26-9e7e-11016c6684f2}" EmbeddedTypeGUIDs="{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{c29154d5-eab1-44d0-9738-99e9db10ded2}" />
    <Node Name="A_AutoOperation" TypeGUID="{8ac092e5-3128-4e26-9e7e-11016c6684f2}" EmbeddedTypeGUIDs="{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{a38280aa-221e-4926-854b-165e8097a043}" />
  </Node>
  <Node Name="st3PtsExtendedPara" TypeGUID="{2db5746d-d284-4425-9f7f-2663a34b0ebc}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" Comment=" Structure for FB_3points_Ext Function Block " ObjectGUID="{d33fdce0-429d-40d7-90ac-b6042332e68a}" />
  <Node Name="PAR_Val_Mono" TypeGUID="{2db5746d-d284-4425-9f7f-2663a34b0ebc}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" Comment=" Structure for Monostable Valve Function Block " ObjectGUID="{d1796818-87dc-4758-a490-9d622a1e7428}" />
  <Node Name="FB_PID" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" The FB_PID function block is a standard PID function block with manual tuning, hold function, bumpless transfer and damping time for derivative action.&lt;br&gt;&#xD;&#xA; This function block provides following features :&#xD;&#xA; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;li&gt;Different modes such as P, PI, PD, and PID;&lt;/li&gt;&#xD;&#xA; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;li&gt;Manual mode operation to control the PID output in manual mode;&lt;/li&gt;&#xD;&#xA; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;li&gt;Anti reset wind-up to avoid the saturation or wind-up in integral action: If the control variable reaches actuator limit, process error will continue to integrate very large integral term is called as windup;&lt;/li&gt;&#xD;&#xA; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;li&gt;Damping time (Td) to filter the overshoot due to derivative action;&lt;/li&gt;&#xD;&#xA; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;li&gt;Bump less transfer is activated when mode changes from manual to auto;&lt;br&gt;&#xD;&#xA; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Bump less transfer avoids sudden change in PID output when mode changes;&lt;/li&gt;&#xD;&#xA; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;li&gt;Detected error status is generated by function block to display detected errors;&lt;/li&gt;&#xD;&#xA; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;li&gt;Inner and outer window functions are used in integral calculations.&lt;br&gt;&#xD;&#xA; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;If absolute value of process error is less than inner window then integral part is scaled with a factor [ABS (err)/Inner Window].&lt;br&gt;&#xD;&#xA; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;This minimizes the overshoot in the PID output.&lt;br&gt;&#xD;&#xA; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;If absolute value of process error is greater than inner window and less than outer window then normal integral calculations are done.&lt;br&gt;&#xD;&#xA; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;If absolute value of process error is greater than outer window then anti reset windup is active and integral output will hold the last value.&lt;/li&gt;" ObjectGUID="{988ba4c1-1b80-4183-af1a-c771de763e00}">
    <Node Name="A_CheckLimit" TypeGUID="{8ac092e5-3128-4e26-9e7e-11016c6684f2}" EmbeddedTypeGUIDs="{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{ac25f1f4-44f5-4b83-9044-b0583e66234d}" />
    <Node Name="A_CalculInternalPara" TypeGUID="{8ac092e5-3128-4e26-9e7e-11016c6684f2}" EmbeddedTypeGUIDs="{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{6306ad82-8095-4d79-b8f0-04cf2c9bc6c1}" />
    <Node Name="A_CalculPropTerm" TypeGUID="{8ac092e5-3128-4e26-9e7e-11016c6684f2}" EmbeddedTypeGUIDs="{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{2c23dac9-9ec1-4518-97c4-61943d53f2f9}" />
    <Node Name="A_CheckParameterValidity" TypeGUID="{8ac092e5-3128-4e26-9e7e-11016c6684f2}" EmbeddedTypeGUIDs="{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{5d847218-2d93-4b34-aa2e-ad3f5db7f735}" />
    <Node Name="A_CalculOffset" TypeGUID="{8ac092e5-3128-4e26-9e7e-11016c6684f2}" EmbeddedTypeGUIDs="{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{73ea6088-d51f-48e9-8e3f-e5602765cbdc}" />
    <Node Name="A_SetFBOutput" TypeGUID="{8ac092e5-3128-4e26-9e7e-11016c6684f2}" EmbeddedTypeGUIDs="{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{182e2e6b-01ae-49ea-9626-7daf5935e1ec}" />
    <Node Name="A_CheckBumpless" TypeGUID="{8ac092e5-3128-4e26-9e7e-11016c6684f2}" EmbeddedTypeGUIDs="{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{9e1fa5cf-a0cb-4bbc-8165-d87d6edef4ee}" />
    <Node Name="A_DoInitialisation" TypeGUID="{8ac092e5-3128-4e26-9e7e-11016c6684f2}" EmbeddedTypeGUIDs="{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{4c5a63d2-b19e-4174-bb40-a06c00f62487}" />
    <Node Name="A_CalculError" TypeGUID="{8ac092e5-3128-4e26-9e7e-11016c6684f2}" EmbeddedTypeGUIDs="{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{e1f7ce0c-a5e1-48ae-aa76-7eeafa1303fe}" />
    <Node Name="A_CalculPIDSum" TypeGUID="{8ac092e5-3128-4e26-9e7e-11016c6684f2}" EmbeddedTypeGUIDs="{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{059d87b1-accb-40db-a431-a4629baab521}" />
    <Node Name="A_CalculDervTerm" TypeGUID="{8ac092e5-3128-4e26-9e7e-11016c6684f2}" EmbeddedTypeGUIDs="{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{c32e83f6-8a79-4fba-9ab5-c7acabf73ef8}" />
    <Node Name="A_SaveOld" TypeGUID="{8ac092e5-3128-4e26-9e7e-11016c6684f2}" EmbeddedTypeGUIDs="{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{5eba6b1f-4240-4d60-bc4a-01a0346326bd}" />
    <Node Name="A_SetError" TypeGUID="{8ac092e5-3128-4e26-9e7e-11016c6684f2}" EmbeddedTypeGUIDs="{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{c49e37c4-3ab2-45bf-898d-c23cb420c3ad}" />
    <Node Name="A_CalculIntTerm" TypeGUID="{8ac092e5-3128-4e26-9e7e-11016c6684f2}" EmbeddedTypeGUIDs="{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{21db1671-99d5-4dd4-8443-7b17e0524605}" />
  </Node>
  <Node Name="Monostable_Valve" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{25e509de-33d4-4447-93f8-c9e4ea381c8b}" Comment=" The Monostable_Valve function block is used for controlling the monostable valve." ObjectGUID="{e3062b91-1935-49f8-a1fe-bae7bd31a7d5}" />
  <Node Name="JK_FlipFlop_MasterSlave" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" This figure shows the pin diagram of the JK_FlipFlop_MasterSlave function block." ObjectGUID="{d971438a-b99e-4545-8b8a-37d457ee7d68}" />
  <Node Name="Fahrenheit_TO_Celsius" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" The Fahrenheit_TO_Celsius function converts temperature in Fahrenheit to Celsius.&lt;br&gt;&#xD;&#xA; Use Celsius_TO_Fahrenheit for the reverse process.&lt;br&gt;&#xD;&#xA; Formula: T_Celcius = [(T_Fahrenheit - 32) / 1.8]&lt;br&gt;" ObjectGUID="{248e7589-b120-44ee-b673-bc4a6a8095df}" />
  <Node Name="Kelvin_TO_Celsius" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" The Kelvin_TO_Celsius function block converts the value in Kelvin unit of type REAL to Celsius unit. The result is a REAL number.&lt;br&gt;&#xD;&#xA; The pin i_rIput is used to enter Kelvin.&lt;br&gt;&#xD;&#xA; The pin q_rOput returns the equivalent Celsius value in REAL data type.&lt;br&gt;&#xD;&#xA; Formula: Celsius = Kelvin – 273.15&lt;br&gt;" ObjectGUID="{69cdfe58-7dbf-4611-a1c2-cb41eda3a0e5}" />
  <Node Name="Mathematical Functions" TypeGUID="{738bea1e-99bb-4f04-90bb-a7a567e74e3a}" EmbeddedTypeGUIDs="" ProvidesLanguageModel="false" ObjectGUID="{35e39c05-036b-4e7c-bdc5-249960a7426e}" />
  <Node Name="Operation_Mode" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" The Operation Mode Control function block is used for selecting between Auto and Manual operating modes from two different sources. " ObjectGUID="{e3557db0-2278-4a51-bc69-1daa6548d4f4}">
    <Node Name="Mode" TypeGUID="{8ac092e5-3128-4e26-9e7e-11016c6684f2}" EmbeddedTypeGUIDs="{25e509de-33d4-4447-93f8-c9e4ea381c8b}" ObjectGUID="{0b135f1a-5356-41e4-a543-5569a5a7a138}" />
    <Node Name="Errors" TypeGUID="{8ac092e5-3128-4e26-9e7e-11016c6684f2}" EmbeddedTypeGUIDs="{25e509de-33d4-4447-93f8-c9e4ea381c8b}" ObjectGUID="{082716c2-158c-4e70-85e2-eead45330239}" />
    <Node Name="Status" TypeGUID="{8ac092e5-3128-4e26-9e7e-11016c6684f2}" EmbeddedTypeGUIDs="{25e509de-33d4-4447-93f8-c9e4ea381c8b}" ObjectGUID="{02e84504-3104-42bc-81a7-6c709b9aa963}" />
  </Node>
  <Node Name="String_TO_ArrayOfByte" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" The String_TO_ArrayOfByte function is an output Array [255] of bytes is the ASCII value of the input String.&lt;br&gt;&lt;br&gt;&#xD;&#xA; If the Order input is TRUE, then the order of the output values corresponds to the order of the string characters at the input.&#xD;&#xA; This means there is a 1:1 correspondence between the order of inputs and the order of ASCII value returned at the output as explained in example 1.&lt;br&gt;&lt;br&gt;&#xD;&#xA; If the Order input is False, then the output is such that the ASCII value of string character at input[1] of input array[1..255] is displayed in position 2 of the output.&#xD;&#xA; The ASCII value of string character at input[2] of input array[1..255] is displayed in position 1 of the output.&#xD;&#xA; Similarly the ASCII value of string character at input[3] of input array[1..255] is displayed in position 4 of the output and the ASCII value of string character at input[4] of input array[1..255] is displayed in position 3 of the output as explained in example 2.&lt;br&gt;" ObjectGUID="{692eaee3-31b9-4e90-8e62-b84b1a828472}" />
  <Node Name="FB_P" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" This FB_P function block is developed to provide a control loop with proportional only algorithm.&lt;br&gt;" ObjectGUID="{8378292d-22f9-4275-8848-d8ad45686460}">
    <Node Name="A_AutoOperation" TypeGUID="{8ac092e5-3128-4e26-9e7e-11016c6684f2}" EmbeddedTypeGUIDs="{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{288091c8-4382-4658-8542-e5667fbb6d43}" />
    <Node Name="A_ManualOperation" TypeGUID="{8ac092e5-3128-4e26-9e7e-11016c6684f2}" EmbeddedTypeGUIDs="{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{541d092c-9ed7-4725-9b96-27da95410b20}" />
    <Node Name="A_Error" TypeGUID="{8ac092e5-3128-4e26-9e7e-11016c6684f2}" EmbeddedTypeGUIDs="{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{04326571-78ef-48ba-a1bb-f8e6609d422d}" />
    <Node Name="A_DoInitialization" TypeGUID="{8ac092e5-3128-4e26-9e7e-11016c6684f2}" EmbeddedTypeGUIDs="{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{7f390f62-9681-426f-9fa6-368f996c2af6}" />
    <Node Name="A_CheckParameterValidity" TypeGUID="{8ac092e5-3128-4e26-9e7e-11016c6684f2}" EmbeddedTypeGUIDs="{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{64a00f92-f8ff-45d9-8335-8832766ac654}" />
    <Node Name="A_ResetError" TypeGUID="{8ac092e5-3128-4e26-9e7e-11016c6684f2}" EmbeddedTypeGUIDs="{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{f11d8696-86f4-41e5-b9e9-60be8910856a}" />
    <Node Name="A_Finalize" TypeGUID="{8ac092e5-3128-4e26-9e7e-11016c6684f2}" EmbeddedTypeGUIDs="{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{131d12a2-3218-445d-87e5-25d565115f6f}" />
  </Node>
  <Node Name="Analysis" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" The Analysis function block calculates the integral and derivative values of a series of input. The output starts with zero at the rising edge of i_xEn. The integral value increases in multiples of interval input.&lt;br&gt;&#xD;&#xA; In each scan both the integral output and the derivative output is updated based on the interval value.&lt;br&gt;&#xD;&#xA; An error is detected if the interval value is equal to/less than zero or if the input is out of range or if the integral or derivative outputs exceed 3.4e+38.&lt;br&gt;&#xD;&#xA; Integral = Integral + (Current Input + Previous Input) / 2 * Interval.&lt;br&gt;&#xD;&#xA; Derivative = (Current Input - Previous Input)/ Interval.&lt;br&gt;" ObjectGUID="{5dcd6786-b605-4905-b17b-7a5ec9bd986f}" />
  <Node Name="FB_Limiter" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" The FB_Limiter function block is a limiter function block to limit an input signal within a defined range.&lt;br&gt;&#xD;&#xA; The input signal is limited to a defined range based on the i_rMaxOput and i_rMinOput as shown in the transfer function figure below.&lt;br&gt;&#xD;&#xA; If the input exceeds the upper or lower limit, the output is limited to maximum or minimum values respectively.&lt;br&gt;&lt;br&gt;&#xD;&#xA; With reference to the timing diagram below :&#xD;&#xA; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;li&gt;If the input is within the defined range, the output is equal to input value;&lt;/li&gt;&#xD;&#xA; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;li&gt;If input value exceeds the maximum limit, the output is limited to maximum output value;&lt;/li&gt;&#xD;&#xA; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;li&gt;Similarly, if the input goes below the minimum output value, the output is limited to the minimum output value;&lt;/li&gt;&#xD;&#xA; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;li&gt;If the function block limits the output, then q_xMinLimActv or q_xMaxLimActv is TRUE, based on the type of limit.&lt;br&gt;&lt;br&gt;&#xD;&#xA; The q_xEn is TRUE as long as i_xEn is TRUE, regardless of detected error.&lt;br&gt;" ObjectGUID="{87c017a9-ee37-40f9-b24b-772f52e867bf}">
    <Node Name="A_CheckParameterValidity" TypeGUID="{8ac092e5-3128-4e26-9e7e-11016c6684f2}" EmbeddedTypeGUIDs="{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{b01d3346-122c-4c10-81fa-fbf438df26fd}" />
    <Node Name="A_DoInitialisation" TypeGUID="{8ac092e5-3128-4e26-9e7e-11016c6684f2}" EmbeddedTypeGUIDs="{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{1f9d3394-9e7b-4000-84b2-35f2fa7f5760}" />
    <Node Name="A_LimitOutput" TypeGUID="{8ac092e5-3128-4e26-9e7e-11016c6684f2}" EmbeddedTypeGUIDs="{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{c475f500-daa8-4f63-a940-bd08250af73e}" />
    <Node Name="A_SetResetError" TypeGUID="{8ac092e5-3128-4e26-9e7e-11016c6684f2}" EmbeddedTypeGUIDs="{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{f40d31a7-975b-419e-ab6f-09c2fec84c5d}" />
  </Node>
  <Node Name="Project Settings" TypeGUID="{8753fe6f-4a22-4320-8103-e553c4fc8e04}" EmbeddedTypeGUIDs="" ProvidesLanguageModel="false" ObjectGUID="{6470a90f-b7cb-43ac-9ae5-94b2338b4573}" />
  <Node Name="SR_FlipFlop" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" The SR_FlipFlop function block implements the truth table for SR flip-flop with set priority." ObjectGUID="{333ac9fb-be69-4df3-ae02-8b7389099298}" />
  <Node Name="Par_Valpro" TypeGUID="{2db5746d-d284-4425-9f7f-2663a34b0ebc}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" Comment=" Structure for Proportional Valve Function Block " ObjectGUID="{464cb0e3-67a5-4adf-bec6-371a38478820}" />
  <Node Name="Filter_AnalogInput" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" The Filter_AnalogInput function block checks the plausibility on a measured analog input.&lt;br&gt;&lt;br&gt;&#xD;&#xA; In normal state of operation, if the difference between the present and previous input value :&#xD;&#xA; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;li&gt;is less than or equal to the specified value i_rMaxIputDiff, then the output follows the input value;&lt;/li&gt;&#xD;&#xA; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;li&gt;is greater than the specified value i_rMaxIputDiff, then the output is overwritten by the previous output value for the maximum of three controller scan cycles. Output overwritten status bit q_xOputOvwr is TRUE in this condition;&lt;/li&gt;&#xD;&#xA; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;li&gt;exceeds the specified value i_rMaxIputDiff for more than three consecutive controller scan cycles, the output again follows the input value.&lt;/li&gt;&lt;br&gt;&lt;br&gt;&#xD;&#xA; &lt;b&gt;NOTE :&lt;/b&gt; When the function block is enabled, during the first scan cycle the input is assigned to the output. " ObjectGUID="{4c0d352f-8dc9-4e95-92aa-15bf1077964e}">
    <Node Name="A_CalcFilterOutput" TypeGUID="{8ac092e5-3128-4e26-9e7e-11016c6684f2}" EmbeddedTypeGUIDs="{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{867230f4-d3ba-4c44-af18-8b7b04bf44b2}" />
    <Node Name="A_SetResetError" TypeGUID="{8ac092e5-3128-4e26-9e7e-11016c6684f2}" EmbeddedTypeGUIDs="{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{44d8b3a9-bb52-4704-9816-6ff514250a1f}" />
    <Node Name="A_CheckParameterValidity" TypeGUID="{8ac092e5-3128-4e26-9e7e-11016c6684f2}" EmbeddedTypeGUIDs="{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{d7ad2872-de8a-4bca-bac0-6550c092cc45}" />
    <Node Name="A_DoInitialisation" TypeGUID="{8ac092e5-3128-4e26-9e7e-11016c6684f2}" EmbeddedTypeGUIDs="{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{d681bad9-ec74-4f5d-b7e2-6fe1fc3e0d1b}" />
  </Node>
  <Node Name="5ce3da45-db07-42e7-a21c-a00fff4ed8f6|D:\New projects\Advanced Tool Box Delivered on 18-07-08\Source_codes\Archive\Logo_SE_Green.bmp" TypeGUID="{9001d745-b9c5-4d77-90b7-b29c3f77a23b}" EmbeddedTypeGUIDs="" ProvidesLanguageModel="false" ObjectGUID="{f32fc0ac-6fe6-4027-960c-0ce34cc8c896}" />
  <Node Name="Data types" TypeGUID="{738bea1e-99bb-4f04-90bb-a7a567e74e3a}" EmbeddedTypeGUIDs="" ProvidesLanguageModel="false" ObjectGUID="{6822ade6-f44d-470c-9ffd-32bce2fc17c4}" />
  <Node Name="DT_AS_WORD" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" The DT_AS_WORD function block extracts data from date and converts to equivalent words.&lt;br&gt;&#xD;&#xA; The DATE_AND_TIME input is converted to output in the form of WORD having year, month, date, hour, minute and second separately.&lt;br&gt;" ObjectGUID="{1b11dbcf-d74f-4fb6-9e8c-7f38ed930453}" />
  <Node Name="WORD_AS_DWORD" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" The WORD_AS_DWORD function block merges two input values of data type WORD into a single output of type DWORD.&lt;br&gt;&#xD;&#xA; The higher word input i_wHigh is shifted to the left by 4 nibbles and adds the lower word input i_wLow to obtain a Dword output q_dwOput.&lt;br&gt;" ObjectGUID="{28a27ea5-a20f-40e2-b909-1c64bcefe4f5}" />
  <Node Name="Celsius_TO_Kelvin" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" The Celsius_TO_Kelvin function block converts the value of Celsius unit of REAL type to Kelvin unit. This result will be a REAL number.&lt;br&gt;&#xD;&#xA; The i_rIput pin is used to enter Celsius.&lt;br&gt;&#xD;&#xA; The q_rOput pin returns the equivalent Kelvin value in REAL data type. &lt;br&gt;&#xD;&#xA; Formula: Kelvin = Celsius + 273.15&lt;br&gt;" ObjectGUID="{6f758d07-fe43-43ab-95bb-711a1e706ca7}" />
  <Node Name="Celsius_TO_Fahrenheit" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" The Celsius_TO_Fahrenheit function converts temperature in Celsius to Fahrenheit.&lt;br&gt;&#xD;&#xA; Use Fahrenheit_TO_Celsius for the reverse process.&lt;br&gt;&#xD;&#xA; Formula : T_Fahrenheit = [(T_Celcius * 1.8) + 32]&lt;br&gt;" ObjectGUID="{63f1276e-17bb-4489-9dba-2c2ad3137cb6}" />
</Library>